{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lawso\\\\Documents\\\\AppPI\\\\screens\\\\home.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { lightTheme, darkTheme } from \"./AppPi/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./AppPi/global\";\nexport default function Home() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"light\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  function navigateToList() {\n    navigation.navigate(\"List\");\n  }\n\n  return React.createElement(ThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), \"// Pass the toggle functionality to the button\", React.createElement(Button, {\n    title: \"Change theme\",\n    onClick: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Open List Screen\",\n    onPress: function onPress() {\n      return navigateToList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/lawso/Documents/AppPI/screens/home.js"],"names":["React","useState","useNavigation","lightTheme","darkTheme","ThemeProvider","GlobalStyles","Home","navigation","theme","setTheme","toggleTheme","navigateToList","navigate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,YAAT;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AAD6B,kBAEHD,QAAQ,CAAC,OAAD,CAFL;AAAA;AAAA,MAEtBQ,KAFsB;AAAA,MAEfC,QAFe;;AAG7B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAND;;AAQA,WAASE,cAAT,GAA0B;AACxBJ,IAAAA,UAAU,CAACK,QAAX,CAAoB,MAApB;AACD;;AACD,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ,KAAK,KAAK,OAAV,GAAoBN,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oDAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAEO,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMC,cAAc,EAApB;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAWD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { lightTheme, darkTheme } from \"./AppPi/theme\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./AppPi/global\";\r\n\r\nexport default function Home() {\r\n  const navigation = useNavigation();\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  function navigateToList() {\r\n    navigation.navigate(\"List\");\r\n  }\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <>\r\n        <GlobalStyles />\r\n        // Pass the toggle functionality to the button\r\n        <Button title=\"Change theme\" onClick={toggleTheme} />\r\n        <Button title=\"Open List Screen\" onPress={() => navigateToList()} />\r\n        <footer></footer>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}