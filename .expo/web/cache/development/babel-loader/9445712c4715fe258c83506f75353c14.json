{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lawso\\\\Documents\\\\AppPI\\\\App.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./src/aws-exports\";\nimport MapView from \"react-native-maps\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { GlobalStyles } from \"./Global\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { ThemeProvider } from \"styled-components\";\nAmplify.configure(config);\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Map\",\n    component: MapScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"light\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  return React.createElement(ThemeProvider, {\n    theme: theme === \"dark\" ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    onPress: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Theme\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Map\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Ouvrir la Carte\"), React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction MapScreen() {\n  var _useState3 = useState(\"light\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      theme = _useState4[0],\n      setTheme = _useState4[1];\n\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  return React.createElement(ThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \" \", React.createElement(MapView, {\n    style: StyleSheet.absoluteFillObject,\n    provider: MapView.PROVIDER_GOOGLE,\n    showsUserLocation: true,\n    showsMyLocationButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport default App;","map":{"version":3,"sources":["C:/Users/lawso/Documents/AppPI/App.js"],"names":["React","useState","Amplify","config","MapView","NavigationContainer","createStackNavigator","GlobalStyles","lightTheme","darkTheme","ThemeProvider","configure","App","HomeScreen","MapScreen","navigation","theme","setTheme","toggleTheme","navigate","StyleSheet","absoluteFillObject","PROVIDER_GOOGLE","Stack"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT;AACA,SAASC,UAAT,EAAqBC,SAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEAR,OAAO,CAACS,SAAR,CAAkBR,MAAlB;;AAEA,SAASS,GAAT,GAAe;AACb,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,KAAnB;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD;;AAED,SAASD,UAAT,OAAoC;AAAA,MAAdE,UAAc,QAAdA,UAAc;;AAAA,kBACRd,QAAQ,CAAC,OAAD,CADA;AAAA;AAAA,MAC3Be,KAD2B;AAAA,MACpBC,QADoB;;AAElC,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAND;;AAQA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,MAAV,GAAmBR,UAAnB,GAAgCC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAES,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,UAAU,CAACI,QAAX,CAAoB,KAApB,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAaD;;AAED,SAASL,SAAT,GAAqB;AAAA,mBACOb,QAAQ,CAAC,OAAD,CADf;AAAA;AAAA,MACZe,KADY;AAAA,MACLC,QADK;;AAEnB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAND;;AAOA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBR,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEW,UAAU,CAACC,kBADpB;AAEE,IAAA,QAAQ,EAAEjB,OAAO,CAACkB,eAFpB;AAGE,IAAA,iBAAiB,EAAE,IAHrB;AAIE,IAAA,qBAAqB,EAAE,IAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD;;AAED,IAAMC,KAAK,GAAGjB,oBAAoB,EAAlC;AAEA,eAAeM,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Button, Text } from \"react-native\";\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./src/aws-exports\";\r\nimport MapView from \"react-native-maps\";\r\nimport \"react-native-gesture-handler\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { GlobalStyles } from \"./Global\";\r\nimport { lightTheme, darkTheme } from \"./theme\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nAmplify.configure(config);\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Map\" component={MapScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({ navigation }) {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"dark\" ? lightTheme : darkTheme}>\r\n      <>\r\n        <GlobalStyles />\r\n        <Text>Home Screen</Text>\r\n        <Button onPress={toggleTheme}>Theme</Button>\r\n        <Button onPress={() => navigation.navigate(\"Map\")}>\r\n          Ouvrir la Carte\r\n        </Button>\r\n        <footer></footer>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nfunction MapScreen() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      {\" \"}\r\n      <MapView\r\n        style={StyleSheet.absoluteFillObject}\r\n        provider={MapView.PROVIDER_GOOGLE}\r\n        showsUserLocation={true}\r\n        showsMyLocationButton={true}\r\n      ></MapView>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}