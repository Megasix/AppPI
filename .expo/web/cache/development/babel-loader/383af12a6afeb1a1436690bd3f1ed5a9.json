{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\lawso\\\\Documents\\\\AppPI\\\\App.js\";\nimport React from \"react\";\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./src/aws-exports\";\nimport MapView from \"react-native-maps\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nAmplify.configure(config);\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Map\",\n    component: MapScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var colorScheme = useColorScheme();\n  var btnColor = colorScheme === \"light\" ? \"blue\" : \"red\";\n  var themeTextStyle = colorScheme === \"light\" ? styles.lightThemeText : styles.darkThemeText;\n  var themeContainerStyle = colorScheme === \"light\" ? styles.lightContainer : styles.darkContainer;\n  return React.createElement(View, {\n    style: [styles.container, themeContainerStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: themeTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    title: \"Th\\xE8me\",\n    color: btnColor,\n    onPress: function onPress() {\n      return colorScheme = (_readOnlyError(\"colorScheme\"), useColorScheme());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Ouvrir la Carte\",\n    color: btnColor,\n    onPress: function onPress() {\n      return navigation.navigate(\"Map\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MapScreen() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    style: StyleSheet.absoluteFillObject,\n    provider: MapView.PROVIDER_GOOGLE,\n    showsUserLocation: true,\n    showsMyLocationButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  lightContainer: {\n    backgroundColor: \"#ffffff\"\n  },\n  darkContainer: {\n    backgroundColor: \"#000000\"\n  },\n  lightThemeText: {\n    color: \"#000000\"\n  },\n  darkThemeText: {\n    color: \"#ffffff\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/lawso/Documents/AppPI/App.js"],"names":["React","AppearanceProvider","useColorScheme","Amplify","config","MapView","NavigationContainer","createStackNavigator","configure","App","HomeScreen","MapScreen","navigation","colorScheme","btnColor","themeTextStyle","styles","lightThemeText","darkThemeText","themeContainerStyle","lightContainer","darkContainer","container","navigate","StyleSheet","absoluteFillObject","PROVIDER_GOOGLE","Stack","create","flex","alignItems","justifyContent","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\r\nimport { StyleSheet, View, Button, Text, SafeAreaView } from \"react-native\";\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./src/aws-exports\";\r\nimport MapView from \"react-native-maps\";\r\nimport \"react-native-gesture-handler\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nAmplify.configure(config);\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Map\" component={MapScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({ navigation }) {\r\n  const colorScheme = useColorScheme();\r\n\r\n  const btnColor = colorScheme === \"light\" ? \"blue\" : \"red\";\r\n  const themeTextStyle =\r\n    colorScheme === \"light\" ? styles.lightThemeText : styles.darkThemeText;\r\n  const themeContainerStyle =\r\n    colorScheme === \"light\" ? styles.lightContainer : styles.darkContainer;\r\n\r\n  return (\r\n    <View style={[styles.container, themeContainerStyle]}>\r\n      <Text style={themeTextStyle}>Home Screen</Text>\r\n      <Button\r\n        title=\"ThÃ¨me\"\r\n        color={btnColor}\r\n        onPress={() => (colorScheme = useColorScheme())}\r\n      ></Button>\r\n      <Button\r\n        title=\"Ouvrir la Carte\"\r\n        color={btnColor}\r\n        onPress={() => navigation.navigate(\"Map\")}\r\n      ></Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction MapScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        style={StyleSheet.absoluteFillObject}\r\n        provider={MapView.PROVIDER_GOOGLE}\r\n        showsUserLocation={true}\r\n        showsMyLocationButton={true}\r\n      ></MapView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lightContainer: {\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  darkContainer: {\r\n    backgroundColor: \"#000000\",\r\n  },\r\n  lightThemeText: {\r\n    color: \"#000000\",\r\n  },\r\n  darkThemeText: {\r\n    color: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}