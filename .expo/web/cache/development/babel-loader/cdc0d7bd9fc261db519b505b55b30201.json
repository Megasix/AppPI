{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lawso\\\\Documents\\\\AppPI\\\\App.js\";\nimport React from \"react\";\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./src/aws-exports\";\nimport MapView from \"react-native-maps\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { GlobalStyles } from \"./Global\";\nAmplify.configure(config);\n\nfunction App() {\n  var _useState = useState(\"light\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Map\",\n    component: MapScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var colorScheme = useColorScheme();\n  var btnColor = colorScheme === \"light\" ? \"blue\" : \"red\";\n  var themeTextStyle = colorScheme === \"light\" ? styles.lightThemeText : styles.darkThemeText;\n  var themeContainerStyle = colorScheme === \"light\" ? styles.lightContainer : styles.darkContainer;\n  return React.createElement(ThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: themeTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    onPress: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Theme\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Map\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Ouvrir la Carte\")));\n}\n\nfunction MapScreen() {\n  return React.createElement(ThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \" \", React.createElement(MapView, {\n    style: StyleSheet.absoluteFillObject,\n    provider: MapView.PROVIDER_GOOGLE,\n    showsUserLocation: true,\n    showsMyLocationButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport default App;","map":{"version":3,"sources":["C:/Users/lawso/Documents/AppPI/App.js"],"names":["React","AppearanceProvider","useColorScheme","Amplify","config","MapView","NavigationContainer","createStackNavigator","GlobalStyles","configure","App","useState","theme","setTheme","toggleTheme","HomeScreen","MapScreen","navigation","colorScheme","btnColor","themeTextStyle","styles","lightThemeText","darkThemeText","themeContainerStyle","lightContainer","darkContainer","lightTheme","darkTheme","navigate","StyleSheet","absoluteFillObject","PROVIDER_GOOGLE","Stack"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\r\nimport { StyleSheet, View, Button, Text, SafeAreaView } from \"react-native\";\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./src/aws-exports\";\r\nimport MapView from \"react-native-maps\";\r\nimport \"react-native-gesture-handler\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { GlobalStyles } from \"./Global\";\r\n\r\nAmplify.configure(config);\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Map\" component={MapScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({ navigation }) {\r\n  const colorScheme = useColorScheme();\r\n\r\n  const btnColor = colorScheme === \"light\" ? \"blue\" : \"red\";\r\n  const themeTextStyle =\r\n    colorScheme === \"light\" ? styles.lightThemeText : styles.darkThemeText;\r\n  const themeContainerStyle =\r\n    colorScheme === \"light\" ? styles.lightContainer : styles.darkContainer;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <GlobalStyles>\r\n        <Text style={themeTextStyle}>Home Screen</Text>\r\n        <Button onPress={toggleTheme}>Theme</Button>\r\n        <Button onPress={() => navigation.navigate(\"Map\")}>\r\n          Ouvrir la Carte\r\n        </Button>\r\n      </GlobalStyles>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nfunction MapScreen() {\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      {\" \"}\r\n      <MapView\r\n        style={StyleSheet.absoluteFillObject}\r\n        provider={MapView.PROVIDER_GOOGLE}\r\n        showsUserLocation={true}\r\n        showsMyLocationButton={true}\r\n      ></MapView>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}