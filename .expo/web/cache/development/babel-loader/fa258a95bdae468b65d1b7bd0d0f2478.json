{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lawso\\\\Documents\\\\AppPI\\\\App.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./src/aws-exports\";\nimport MapView from \"react-native-maps\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { GlobalStyles } from \"./Global\";\nimport { lightTheme, darkTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\nAmplify.configure(config);\n\nfunction App() {\n  var _useState = useState(\"light\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  return React.createElement(ThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), \"// Pass the toggle functionality to the button\", React.createElement(\"button\", {\n    onClick: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Toggle theme\"), React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"It's a light theme!\"), React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lawso/Documents/AppPI/App.js"],"names":["React","useState","Amplify","config","MapView","NavigationContainer","createStackNavigator","GlobalStyles","lightTheme","darkTheme","ThemeProvider","configure","App","theme","setTheme","toggleTheme"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT;AACA,SAASC,UAAT,EAAqBC,SAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEAR,OAAO,CAACS,SAAR,CAAkBR,MAAlB;;AAGA,SAASS,GAAT,GAAe;AAAA,kBACaX,QAAQ,CAAC,OAAD,CADrB;AAAA;AAAA,MACNY,KADM;AAAA,MACCC,QADD;;AAEb,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAND;;AAQA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBL,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oDAGE;AAAQ,IAAA,OAAO,EAAEM,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAkBD;;AA4CD,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Button, Text } from \"react-native\";\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./src/aws-exports\";\r\nimport MapView from \"react-native-maps\";\r\nimport \"react-native-gesture-handler\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { GlobalStyles } from \"./Global\";\r\nimport { lightTheme, darkTheme } from \"./Theme\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nAmplify.configure(config);\r\n//const Stack = createStackNavigator();\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <>\r\n        <GlobalStyles />\r\n        // Pass the toggle functionality to the button\r\n        <button onClick={toggleTheme}>Toggle theme</button>\r\n        <h1>It's a light theme!</h1>\r\n        <footer></footer>\r\n      </>\r\n    </ThemeProvider>\r\n\r\n    /*<NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Map\" component={MapScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>*/\r\n  );\r\n}\r\n\r\n/*function HomeScreen({ navigation }) {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <>\r\n        <GlobalStyles />\r\n        <Text>Home Screen</Text>\r\n        <Button title=\"Theme\" onPress={(toggleTheme)}>\r\n          Theme\r\n        </Button>\r\n        <footer></footer>\r\n        <Button\r\n          title=\"Aller Ã  la carte\"\r\n          onPress={() => navigation.navigate(\"Map\")}\r\n        >\r\n          Ouvrir la Carte\r\n        </Button>\r\n        <footer></footer>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}*/\r\n\r\n/*function MapScreen() {\r\n  return (\r\n    <MapView\r\n      style={StyleSheet.absoluteFillObject}\r\n      provider={MapView.PROVIDER_GOOGLE}\r\n      showsUserLocation={true}\r\n      showsMyLocationButton={true}\r\n    ></MapView>\r\n  );\r\n}*/\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}